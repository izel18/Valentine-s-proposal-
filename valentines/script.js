// Arrays for file names (adjust these names to match your actual file names)
const catGifs = [
  "cat1.gif", // Your cat GIF files for celebration
  "cat2.gif"
];

const catImages = [
  "cat1.png", // Your cat image files for "No" clicks (square images)
  "cat2.jpg",
  "cat3.jpg",
  "cat4.jpg",
  "cat5.jpg"
];

let yesButtonSize = 1;

// Handle background music
const bgMusic = new Audio("background-music.mp3");
bgMusic.loop = true;
bgMusic.muted = true;  // Initially muted

// Play the audio after the first user interaction
document.getElementById("yes-btn").addEventListener("click", () => {
  bgMusic.play();
  bgMusic.muted = false;  // Unmute the audio
});

// When "Yes" is clicked:
document.getElementById("yes-btn").addEventListener("click", () => {
  // Remove the main container (Valentine text and buttons)
  const container = document.getElementById("container");
  if (container) {
    container.remove();
  }
  
  // Remove any cat images generated by clicking "No"
  const catPopup = document.getElementById("cat-popup");
  while (catPopup.firstChild) {
    catPopup.removeChild(catPopup.firstChild);
  }
  
  // Display the celebration section (showing the texts and cat GIFs)
  const celebration = document.getElementById("celebration");
  celebration.style.display = "block";
  
  // Add cat GIFs into the gif-container
  const gifContainer = document.getElementById("gif-container");
  gifContainer.innerHTML = "";
  catGifs.forEach((gif) => {
    const imgElement = document.createElement("img");
    imgElement.src = gif;
    gifContainer.appendChild(imgElement);
  });
  
  // Create falling hearts
  createHearts();
});

// When "No" is clicked:
document.getElementById("no-btn").addEventListener("click", () => {
  // Create a random cat image at a random position
  const randomImage = catImages[Math.floor(Math.random() * catImages.length)];
  const imgElement = document.createElement("img");
  imgElement.src = randomImage;
  
  // Set a random position (within 80% of viewport height/width)
  imgElement.style.top = Math.random() * 80 + "vh";
  imgElement.style.left = Math.random() * 80 + "vw";
  
  document.getElementById("cat-popup").appendChild(imgElement);
  
  // Increase the size of the "Yes" button each time "No" is clicked
  yesButtonSize += 0.5;
  const yesButton = document.getElementById("yes-btn");
  yesButton.style.transform = `scale(${yesButtonSize})`;
  
  // If the "Yes" button grows large enough, disable the "No" button (by blocking pointer events)
  const noButton = document.getElementById("no-btn");
  if (yesButtonSize >= 3) {
    noButton.style.pointerEvents = "none";
  }
});

// Function to create falling hearts
function createHearts() {
  const heartsContainer = document.createElement("div");
  heartsContainer.classList.add("hearts-container");
  document.body.appendChild(heartsContainer);
  
  for (let i = 0; i < 50; i++) {
    const heart = document.createElement("div");
    heart.classList.add("heart");
    heart.style.left = Math.random() * 100 + "vw";
    heart.style.animationDelay = Math.random() * 5 + "s";
    heart.style.animationDuration = Math.random() * 2 + 3 + "s";
    heartsContainer.appendChild(heart);
    
    setTimeout(() => heart.remove(), 8000);
  }
  
  setTimeout(() => heartsContainer.remove(), 8000);
}
